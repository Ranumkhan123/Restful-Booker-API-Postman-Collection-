{
	"info": {
		"_postman_id": "abc15a61-8d4e-41b5-b70d-42cda9334479",
		"name": "restful-booker_API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15491437"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Authentication",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"token\", jsonData.token);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/auth",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				}
			],
			"description": "StartFragmentCreates a new auth token to use for access to the PUT and DELETE /bookingEndFragment"
		},
		{
			"name": "Booking",
			"item": [
				{
					"name": "Post_NewBooking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const res = pm.response.json();\r",
									"\r",
									"//Saving booking ID\r",
									"pm.collectionVariables.set(\"bookingid\", res.bookingid);\r",
									"\r",
									"// Save as variables\r",
									"let firstName = pm.collectionVariables.set(\"firstname\", res.booking.firstname);\r",
									"let lastname = pm.collectionVariables.set(\"lastname\", res.booking.lastname);\r",
									"let totalprice = pm.collectionVariables.set(\"totalprice\", res.booking.totalprice);\r",
									"let depositpaid = pm.collectionVariables.set(\"depositpaid\", res.booking.depositpaid);\r",
									"let checkin = pm.collectionVariables.set(\"checkin\", res.booking.bookingdates.checkin);\r",
									"let checkout = pm.collectionVariables.set(\"checkout\", res.booking.bookingdates.checkout);\r",
									"\r",
									"\r",
									"// Print Book Info\r",
									"console.log(\"First Name:\", res.booking.firstname);\r",
									"console.log(\"Last Name:\", res.booking.lastname);\r",
									"console.log(\"Total Price:\", res.booking.totalprice);\r",
									"console.log(\"Deposit Paid:\", res.booking.depositpaid);\r",
									"console.log(\"Booking Dates:\");\r",
									"console.log(\"Check In:\", res.booking.bookingdates.checkin);\r",
									"console.log(\"Check Out:\", res.booking.bookingdates.checkout);\r",
									"\r",
									"\r",
									"//Tests  \r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"//First Name\r",
									"pm.test(\"First name matches\", function () {\r",
									"    pm.expect(res.booking.firstname).to.eql(pm.collectionVariables.get(\"firstname\"));\r",
									"});\r",
									"\r",
									"//Last Name\r",
									"pm.test(\"Last name matches\", function () {\r",
									"    pm.expect(res.booking.lastname).to.eql(pm.collectionVariables.get(\"lastname\"));\r",
									"});\r",
									"\r",
									"//Total Price\r",
									"pm.test(\"Total Price  matches\", function () {\r",
									"    pm.expect(res.booking.totalprice).to.eql(pm.collectionVariables.get(\"totalprice\"));\r",
									"});\r",
									"\r",
									"//Deposit Paid\r",
									"pm.test(\"Deposit paid matches\", function () {\r",
									"    pm.expect(res.booking.depositpaid).to.eql(pm.collectionVariables.get(\"depositpaid\"));\r",
									"});\r",
									"\r",
									"//Check In\r",
									"pm.test(\"Check-in matches\", function () {\r",
									"    pm.expect(res.booking.bookingdates.checkin).to.eql(pm.collectionVariables.get(\"checkin\"));\r",
									"});\r",
									"\r",
									"//Check Out\r",
									"pm.test(\"Check-out matches\", function () {\r",
									"    pm.expect(res.booking.bookingdates.checkout).to.eql(pm.collectionVariables.get(\"checkout\"));\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"firstname\": \"{{$randomFirstName}}\",\r\n    \"lastname\": \"{{$randomLastName}}\",\r\n    \"totalprice\": 123,\r\n    \"depositpaid\": true,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"2025-04-24\",\r\n        \"checkout\": \"2025-04-30\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/booking",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_NewBookingID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"\r",
									"\r",
									"let targetId = pm.collectionVariables.get(\"bookingid\");\r",
									"\r",
									"let exists = response.some(obj => obj.bookingid == targetId);\r",
									"\r",
									"pm.test(\"Recently created booking ID exists\", function () {\r",
									"    pm.expect(exists).to.eql(true);\r",
									"});\r",
									"\r",
									"//Print that Booking ID\r",
									"console.log(\"Recently Created ID:\", targetId);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/booking?id={{bookingid}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking"
							],
							"query": [
								{
									"key": "id",
									"value": "{{bookingid}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_Bookings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const res = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//booking ID\r",
									"pm.test(\"Response has Booking ID\", function () {\r",
									"     pm.expect(pm.response.text()).to.include(\"bookingid\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/booking",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_BookingsByID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const res = pm.response.json();\r",
									"\r",
									"//Extract Values\r",
									"let firstname = res.firstname;\r",
									"let lastname = res.lastname;\r",
									"let totalprice = res.totalprice;\r",
									"let depositpaid = res.depositpaid;\r",
									"let checkin = res.bookingdates.checkin;\r",
									"let checkout = res.bookingdates.checkout;\r",
									"\r",
									"// Save as variables\r",
									"pm.collectionVariables.set(\"firstname\", firstname);\r",
									"pm.collectionVariables.set(\"lastname\", lastname);\r",
									"pm.collectionVariables.set(\"totalprice\", totalprice);\r",
									"pm.collectionVariables.set(\"depositpaid\", depositpaid);\r",
									"pm.collectionVariables.set(\"checkin\", checkin);\r",
									"pm.collectionVariables.set(\"checkout\", checkout);\r",
									"\r",
									"// Print Book Info\r",
									"console.log(\"User Info\");\r",
									"console.log(\"First Time:\", firstname);\r",
									"console.log(\"Last Name:\", lastname);\r",
									"console.log(\"Total Price:\", totalprice);\r",
									"console.log(\"Deposit Paid:\", depositpaid);\r",
									"console.log(\"Booking Dates:\");\r",
									"console.log(\"Check-In:\", checkin);\r",
									"console.log(\"Check-Out :\", checkout);\r",
									"\r",
									"//Tests \r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//First Name\r",
									"pm.test(\"First name matches\", function () {\r",
									"    pm.expect(res.firstname).to.eql(pm.collectionVariables.get(\"firstname\"));\r",
									"});\r",
									"\r",
									"//Last Name\r",
									"pm.test(\"Last name matches\", function () {\r",
									"    pm.expect(res.lastname).to.eql(pm.collectionVariables.get(\"lastname\"));\r",
									"});\r",
									"\r",
									"//Total Price\r",
									"pm.test(\"Total Price  matches\", function () {\r",
									"    pm.expect(res.totalprice).to.eql(pm.collectionVariables.get(\"totalprice\"));\r",
									"});\r",
									"\r",
									"//Deposit Paid\r",
									"pm.test(\"Deposit paid matches\", function () {\r",
									"    pm.expect(res.depositpaid).to.eql(pm.collectionVariables.get(\"depositpaid\"));\r",
									"});\r",
									"\r",
									"//Check In\r",
									"pm.test(\"Check-in matches\", function () {\r",
									"    pm.expect(res.bookingdates.checkin).to.eql(pm.collectionVariables.get(\"checkin\"));\r",
									"});\r",
									"\r",
									"//Check Out\r",
									"pm.test(\"Check-out matches\", function () {\r",
									"    pm.expect(res.bookingdates.checkout).to.eql(pm.collectionVariables.get(\"checkout\"));\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/booking/2",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit_NewBooking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const res = pm.response.json();\r",
									"\r",
									"//Extract Values\r",
									"let firstname = res.firstname;\r",
									"let lastname = res.lastname;\r",
									"let totalprice = res.totalprice;\r",
									"let depositpaid = res.depositpaid;\r",
									"let bookingdates = res.bookingdates;\r",
									"let checkin = res.bookingdates.checkin;\r",
									"let checkout = res.bookingdates.checkout;\r",
									"\r",
									"\r",
									"// Save as variables\r",
									"pm.collectionVariables.set(\"firstname\", firstname);\r",
									"pm.collectionVariables.set(\"lastname\", lastname);\r",
									"pm.collectionVariables.set(\"totalprice\", totalprice);\r",
									"pm.collectionVariables.set(\"depositpaid\", depositpaid);\r",
									"pm.collectionVariables.set(\"bookingdates\", bookingdates);\r",
									"pm.collectionVariables.set(\"checkin\", checkin);\r",
									"pm.collectionVariables.set(\"checkout\", checkout);\r",
									"\r",
									"\r",
									"// Print Book Info\r",
									"console.log(\"User Info\");\r",
									"console.log(\"First Time:\", firstname);\r",
									"console.log(\"Last Name:\", lastname);\r",
									"console.log(\"Total Price:\", totalprice);\r",
									"console.log(\"Deposit Paid:\", depositpaid);\r",
									"console.log(\"Booking Dates:\", bookingdates);\r",
									"console.log(\"Check-In:\", checkin);\r",
									"console.log(\"Check-Out :\", checkout);\r",
									"\r",
									"\r",
									"//Tests\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Cookie",
								"value": "token={{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"lastname\": \"{{$randomLastName}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/booking/{{bookingid}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking",
								"{{bookingid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update_Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const res = pm.response.json();\r",
									"\r",
									"//Extract Values\r",
									"let firstname = res.firstname;\r",
									"let lastname = res.lastname;\r",
									"let totalprice = res.totalprice;\r",
									"let depositpaid = res.depositpaid;\r",
									"let bookingdates = res.bookingdates;\r",
									"let checkin = res.bookingdates.checkin;\r",
									"let checkout = res.bookingdates.checkout;\r",
									"\r",
									"\r",
									"// Save as variables\r",
									"pm.collectionVariables.set(\"firstname\", firstname);\r",
									"pm.collectionVariables.set(\"lastname\", lastname);\r",
									"pm.collectionVariables.set(\"totalprice\", totalprice);\r",
									"pm.collectionVariables.set(\"depositpaid\", depositpaid);\r",
									"pm.collectionVariables.set(\"bookingdates\", bookingdates);\r",
									"pm.collectionVariables.set(\"checkin\", checkin);\r",
									"pm.collectionVariables.set(\"checkout\", checkout);\r",
									"\r",
									"\r",
									"// Print Book Info\r",
									"console.log(\"User Info\");\r",
									"console.log(\"First Time:\", firstname);\r",
									"console.log(\"Last Name:\", lastname);\r",
									"console.log(\"Total Price:\", totalprice);\r",
									"console.log(\"Deposit Paid:\", depositpaid);\r",
									"console.log(\"Booking Dates:\", bookingdates);\r",
									"console.log(\"Check-In:\", checkin);\r",
									"console.log(\"Check-Out :\", checkout);\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"//Tests\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Cookie",
								"value": "token={{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"firstname\": \"{{$randomFirstName}}\",\r\n    \"lastname\": \"{{$randomLastName}}\",\r\n    \"totalprice\": 324,\r\n    \"depositpaid\": false,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"2025-02-24\",\r\n        \"checkout\": \"2025-02-30\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/booking/{{bookingid}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking",
								"{{bookingid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete_NewBooking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Tests\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Cookie",
								"value": "token={{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/booking/{{bookingid}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking",
								"{{bookingid}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Returns the ids of all the bookings that exist within the API. Can take optional query strings to search and return a subset of booking ids."
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "bookingid",
			"value": ""
		},
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "firstname",
			"value": ""
		},
		{
			"key": "lastname",
			"value": ""
		},
		{
			"key": "totalprice",
			"value": ""
		},
		{
			"key": "depositpaid",
			"value": ""
		},
		{
			"key": "checkin",
			"value": ""
		},
		{
			"key": "checkout",
			"value": ""
		},
		{
			"key": "bookingdates",
			"value": ""
		}
	]
}